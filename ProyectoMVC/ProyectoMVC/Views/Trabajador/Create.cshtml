@model ProyectoMVC.Models.Trabajadores

@{
    ViewBag.Title = "Registrar";
   

}

<h2 style="color:forestgreen" >Registre un Empleado</h2>




@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TipoIdentificacionId, "TipoIdentificacionId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TipoIdentificacionId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipoIdentificacionId, "", new { @class = "text-danger" })
                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Identiificacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Identiificacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Identiificacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrimerNombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrimerNombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PrimerNombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SegundoNombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SegundoNombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SegundoNombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrimerApellido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrimerApellido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PrimerApellido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SegundoApellido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SegundoApellido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SegundoApellido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaNacimiento, new { htmlAttributes = new { @class = "form-control" }})
                @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger" })

            </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.Edad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Edad, new { htmlAttributes = new { @class = "form-control" } })    
                @Html.ValidationMessageFor(model => model.Edad, "", new { @class = "text-danger" })
            </div>
        </div>

       
    </div>
}

<div>
    @Html.ActionLink("Volver a la lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/jquery-3.4.1.js"></script>
<script>

    $(function () {
       
        $("#FechaNacimiento").on("change", function () {
            var fechaActual = new Date();
            var cumple = new Date($("#FechaNacimiento").val());
            var edad = fechaActual.getFullYear() - cumple.getFullYear();
            var t = fechaActual.getMonth() - cumple.getMonth();
            if (t < 0 || (t === 0 && fechaActual.getDate() < cumple.getDate())) {
                edad--;
            } else {
                edad;
            }
            $("#Edad").val(edad);

        });
    });
     
</script>